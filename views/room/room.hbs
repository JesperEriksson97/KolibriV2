{{> navbar}}
{{> head}}

{{> fiddle}}

<!--
Here we should have a hbs if statement that fills the fiddle with
the deata from mongoDB
-->

<div class="container">
    <!-- In the list we should list all the sockets connected -->
    <div class="in-room-members">
        <ul>
            <li>
                Jesper
            </li>
            <li>
                Jesper2
            </li>
            <li>
                Jesper3
            </li>
            <li>
                Jesper4
            </li>
        </ul>
    </div>
    <button><a href="/">Leave</a></button>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.9/ace.js" type="text/javascript"
        charset="utf-8"></script>
    <script src="/socket.io/socket.io.js"></script>
    <!-- <script src="js/main.js"></script> -->
    <script>
        const socket = io();
        // Called to App.js
        function saveToDataBase(_id, cursor) {
            socket.emit('update', { data: editor.getValue(), _id: _id, cursor: cursor })
        }
        // Called from App.js
        /**
        Problems:
        - I tend trigget 'change' events just before the editor can sense a change in the cursor sometimes leading to the change of the cursor not registrating
        - When I load the data via mongoose the < > / \ is being seen as &lt; and &gt; etc. This is good for safety reason but should be reverted in the intial setUpEditor() method
        - I dont want to show my functions on the client so I need to move these into main.js and make it work.
        */
        socket.on('editorUpdate', (data) => {
            console.log(data.cursor)
            // This should be called from the server after a 'change' has been made
            editor.setValue(data.updatedFiddle.data)
            editor.selection.moveTo(data.cursor.row, data.cursor.column + 1)
            editor.clearSelection()
        })
        function update() {
            var idoc = document.getElementById('terminal').contentWindow.document
            idoc.open()
            idoc.write(editor.getValue())
            idoc.close()
        }
        function setUpEditor() {
            window.editor = ace.edit("editor")
            editor.setTheme("ace/theme/monokai")
            editor.session.setMode("ace/mode/html")
            editor.selection.moveTo(`{{fiddle.cursor.row }}`, `{ { fiddle.cursor.column } }`)
            editor.setValue(`{{fiddle.data}}`)
            editor.highlightActiveLine
            // EVERY TIME WE WRITE SAVE IT TO UPDATE
            editor.getSession().on('change', function () {
                // Checks if a user is manually changing the ace editor
                if (editor.curOp && editor.curOp.command.name) {
                    console.log("user change")
                    saveToDataBase(`{{fiddle._id}}`, editor.getCursorPosition())
                    update()
                }
                else
                    update()
            })
            document.getElementById('editor').style.fontSize = '14px';
        }
        setUpEditor()
        update()
    </script>
</div>